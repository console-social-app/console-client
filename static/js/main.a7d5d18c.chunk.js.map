{"version":3,"sources":["components/AuthenticatedRoute/AuthenticatedRoute.js","components/AutoDismissAlert/AutoDismissAlert.js","apiConfig.js","api/search.js","components/SearchBar/SearchBar.js","components/Header/Header.js","api/auth.js","components/AutoDismissAlert/messages.js","components/auth/SignUp.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","api/posts.js","components/posts/CreatePost/CreatePost.js","components/posts/EditPost/EditPost.js","components/comments/CreateComment/CreateComment.js","api/comments.js","components/comments/EditComment.js","components/comments/Comment/Comment.js","components/comments/Comments.js","components/posts/PostContainer/PostContainer.js","components/Home/Home.js","components/posts/Post.js","components/Profile/Profile.js","App.js","index.js"],"names":["AuthenticatedRoute","user","Component","component","render","rest","props","to","AutoDismissAlert","handleClose","setState","show","state","timeoutId","this","setTimeout","clearTimeout","variant","heading","message","deleteAlert","id","Alert","dismissible","onClose","className","Heading","React","apiUrls","apiUrl","window","location","hostname","resources","search","cancel","query","a","axios","CancelToken","source","cancelToken","token","res","result","data","results","isCancel","console","log","makeRequestCreator","SearchBar","users","loading","value","val","onChangeHandler","e","target","map","_id","username","noResults","renderUsers","length","noResultsJsx","onChange","placeholder","authenticatedOptions","exact","unauthenticatedOptions","Header","Navbar","expand","Brand","Toggle","aria-controls","Collapse","Nav","signIn","credentials","url","method","email","password","indexPostsFailure","SignUp","handleChange","event","name","onSignUp","preventDefault","msgAlert","history","setUser","password_confirmation","passwordConfirmation","then","push","catch","error","Form","onSubmit","Group","controlId","Label","Control","required","type","Button","withRouter","SignIn","toggleChecked","prevState","checked","onSignIn","userJSON","JSON","stringify","localStorage","setItem","Check","label","SignOut","clearUser","headers","Authorization","signOut","finally","removeItem","ChangePassword","onChangePassword","passwords","old","oldPassword","new","newPassword","changePassword","showPost","postId","CreatePost","onCreatePost","updatePosts","post","owner","title","content","createPost","comments","err","autoComplete","onValueChange","highlight","languages","js","padding","UpdatePost","userInput","currState","handleSubmit","match","updatePost","params","size","CreateComment","onCreateComment","updateComments","showComments","toggleComments","comment","ownerName","createComment","uniqid","created","EditComment","onEditComment","toggle","newComment","updateComment","deleted","pathname","Comment","property","onDestroyComment","commentId","userId","deleteComment","showEdit","showButtons","renderButtons","modifyButtonsJsx","onClick","editCommentJsx","Comments","postOwner","PostContainer","goToPost","classList","contains","newComments","index","findIndex","el","splice","s","commentsJsx","split","line","replace","Home","posts","indexPosts","reverse","Post","destroy","deletePost","Spinner","animation","role","Profile","profileId","indexUserPosts","App","msgAlerts","filter","msg","uuid","parse","getItem","path","appJsx","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a7d5d18c.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\n// props will include a `user` object or empty object\n// props will include a `component` as `Component` or a `render`\n// all other props that may be passed in are `..rest`\nconst AuthenticatedRoute = ({\n  user,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  // if props include a `user` object and a `render` then create route with `render`\n  if (user && render) {\n    return <Route {...rest} render={render} />\n\n    // if props include a `user` object but no `render` then create route with `Component`\n    // if props do not include a `user` object then redirect to home\n  } else {\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          user ? <Component {...props} /> : <Redirect to='/' />\n        }\n      />\n    )\n  }\n}\n\nexport default AuthenticatedRoute\n","import React from 'react'\nimport Alert from 'react-bootstrap/Alert'\n\nimport './AutoDismissAlert.scss'\n\nclass AutoDismissAlert extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      show: true\n    }\n    this.timeoutId = null\n  }\n\n  componentDidMount () {\n    this.timeoutId = setTimeout(this.handleClose, 5000)\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeoutId)\n  }\n\nhandleClose = () => this.setState({ show: false })\n\nrender () {\n  const { variant, heading, message, deleteAlert, id } = this.props\n\n  // Delete this alert after the fade animation time (300 ms by default)\n  if (!this.state.show) {\n    setTimeout(() => {\n      deleteAlert(id)\n    }, 300)\n  }\n\n  return (\n    <Alert\n      dismissible\n      show={this.state.show}\n      variant={variant}\n      onClose={this.handleClose}>\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n}\n\nexport default AutoDismissAlert\n","let apiUrl\nconst apiUrls = {\n  production: 'https://console-social-app.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import axios from 'axios'\r\n\r\nexport const truncStr = (string, limit) => {\r\n  return string.length > limit\r\n    ? string\r\n      .trim()\r\n      .substring(0, limit - 3)\r\n      .trim() + '...'\r\n    : string\r\n}\r\n\r\nconst resources = {}\r\n\r\nconst makeRequestCreator = () => {\r\n  let cancel\r\n\r\n  return async query => {\r\n    if (cancel) {\r\n      // Cancel the previous request before making a new request\r\n      cancel.cancel()\r\n    }\r\n    // Create a new CancelToken\r\n    cancel = axios.CancelToken.source()\r\n    try {\r\n      if (resources[query]) {\r\n        // Return result if it exists\r\n        return resources[query]\r\n      }\r\n      const res = await axios(query, { cancelToken: cancel.token })\r\n\r\n      const result = res.data.results\r\n      // Store response\r\n      resources[query] = result\r\n\r\n      return result\r\n    } catch (error) {\r\n      if (axios.isCancel(error)) {\r\n        // Handle if request was cancelled\r\n        console.log('Request canceled', error.message)\r\n      } else {\r\n        // Handle usual errors\r\n        console.log('Something went wrong: ', error.message)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport const search = makeRequestCreator()\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport apiUrl from '../../apiConfig'\r\nimport { search } from '../../api/search'\r\n\r\nimport './SearchBar.scss'\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    users: null,\r\n    loading: false,\r\n    value: ''\r\n  };\r\n\r\n  search = async val => {\r\n    this.setState({ loading: true })\r\n    const results = await search(`${apiUrl}/users?users=${val}`)\r\n    const users = results\r\n\r\n    this.setState({ users, loading: false })\r\n  }\r\n\r\n  onChangeHandler = async e => {\r\n    this.search(e.target.value)\r\n    this.setState({ value: e.target.value })\r\n  }\r\n\r\n  get renderUsers () {\r\n    let users = ''\r\n    if (this.state.users) {\r\n      users = this.state.users.map(user => {\r\n        return (\r\n          <div className='result' key={user._id}>\r\n            <Link className='resultLink' to={`/posts?user=${user._id}`} >{user.username}</Link>\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n    if (!this.state.value) {\r\n      users = ''\r\n    }\r\n\r\n    return users\r\n  }\r\n\r\n  render () {\r\n    const { value } = this.state\r\n    const noResults = this.renderUsers.length === 0 && value.length > 0\r\n    const noResultsJsx = (<div className=\"result\">No results</div>)\r\n    return (\r\n      <>\r\n        <div className=\"searchBar\">\r\n          <input className=\"searchInput\"\r\n            value={value}\r\n            onChange={e => this.onChangeHandler(e)}\r\n            placeholder=\"Search Users\"\r\n          />\r\n        </div>\r\n        <div className=\"resultContainer\">\r\n          {noResults ? noResultsJsx : this.renderUsers}\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchBar\r\n","import React, { Fragment } from 'react'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport SearchBar from '../SearchBar/SearchBar'\r\nimport './Header.scss'\r\n\r\nconst authenticatedOptions = (\r\n  <Fragment>\r\n    <NavLink exact to='/home' className='nav-link'>Home</NavLink>\r\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\r\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\r\n  </Fragment>\r\n)\r\n\r\nconst unauthenticatedOptions = (\r\n  <Fragment>\r\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\r\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\r\n  </Fragment>\r\n)\r\n\r\nconst Header = ({ user }) => (\r\n  <Navbar id=\"header\" expand='md'>\r\n    <Navbar.Brand>\r\n      <Link to='/home' id=\"headerTitle\">{'{ console }'}</Link>\r\n    </Navbar.Brand>\r\n    <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n    <Navbar.Collapse id='basic-navbar-nav'>\r\n      <Nav className='ml-auto'>\r\n        {user ? authenticatedOptions : unauthenticatedOptions}\r\n      </Nav>\r\n    </Navbar.Collapse>\r\n    <SearchBar />\r\n  </Navbar>\r\n)\r\n\r\nexport default Header\r\n","import apiUrl from '../apiConfig'\r\nimport axios from 'axios'\r\n\r\nexport const signUp = (credentials) => {\r\n  return axios({\r\n    method: 'POST',\r\n    url: apiUrl + '/sign-up/',\r\n    data: {\r\n      credentials: {\r\n        username: credentials.username,\r\n        email: credentials.email,\r\n        password: credentials.password,\r\n        password_confirmation: credentials.passwordConfirmation\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport const signIn = (credentials) => {\r\n  return axios({\r\n    url: apiUrl + '/sign-in/',\r\n    method: 'POST',\r\n    data: {\r\n      credentials: {\r\n        email: credentials.email,\r\n        password: credentials.password\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport const signOut = (user) => {\r\n  return axios({\r\n    url: apiUrl + '/sign-out/',\r\n    method: 'DELETE',\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const changePassword = (passwords, user) => {\r\n  return axios({\r\n    url: apiUrl + '/change-password/',\r\n    method: 'PATCH',\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    },\r\n    data: {\r\n      passwords: {\r\n        old: passwords.oldPassword,\r\n        new: passwords.newPassword\r\n      }\r\n    }\r\n  })\r\n}\r\n","/* eslint-disable no-tabs */\r\n// AUTH\r\nexport const signUpSuccess =\r\n\t'Successfully registered! You\\'ve been signed in as well.'\r\nexport const signUpFailure =\r\n\t'Registration failed. Email may be taken, or passwords don\\'t match.'\r\nexport const signInSuccess = 'Welcome!'\r\nexport const signInFailure =\r\n\t'Failed to sign in. Check your email and password and try again.'\r\nexport const signOutSuccess = 'Come back soon!'\r\nexport const changePasswordSuccess = 'Password changed successfully!'\r\nexport const changePasswordFailure =\r\n\t'Failed to change passwords. Check your old password and try again.'\r\n\r\n// POSTS\r\nexport const createPostSuccess = 'Your post has successfully been created.'\r\nexport const createPostFailure =\r\n\t'Failed to create post, please double check your input and try again. Error: '\r\nexport const indexPostsFailure =\r\n\t'Couldn\\'t find posts, please refresh the page and try again. Error: '\r\nexport const showPostFailure =\r\n\t'Couldn\\'t find this post. Please refresh the page and try again. Error: '\r\nexport const deletePostSuccess = 'Your post has successfully been deleted.'\r\nexport const deletePostFailure =\r\n\t'Something went wrong while deleting this post, please refresh and try again. Error: '\r\n\r\n// COMMENTS\r\nexport const createCommentSuccess = 'Your comment has successfully been created.'\r\nexport const createCommentFailure =\r\n\t'Failed to create comment, please double check your input and try again. Error: '\r\nexport const indexCommentsFailure =\r\n\t'Couldn\\'t find comments, please refresh the page and try again. Error: '\r\nexport const showCommentFailure =\r\n\t'Couldn\\'t find this comment. Please refresh the page and try again. Error: '\r\nexport const deleteCommentSuccess = 'Your comment has successfully been deleted.'\r\nexport const deleteCommentFailure =\r\n\t'Something went wrong while deleting this comment, please refresh and try again. Error: '\r\n","/* eslint-disable no-tabs */\r\nimport React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { signUp, signIn } from '../../api/auth'\r\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass SignUp extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n      passwordConfirmation: ''\r\n    }\r\n  }\r\n\r\nhandleChange = (event) =>\r\n  this.setState({\r\n    [event.target.name]: event.target.value\r\n  })\r\n\r\nonSignUp = (event) => {\r\n  event.preventDefault()\r\n\r\n  const { msgAlert, history, setUser } = this.props\r\n\r\n  signUp(this.state)\r\n    .then(() => signIn(this.state))\r\n    .then((res) => setUser(res.data.user))\r\n    .then(() =>\r\n      msgAlert({\r\n        heading: 'Sign Up Success',\r\n        message: signUpSuccess,\r\n        variant: 'success'\r\n      })\r\n    )\r\n    .then(() => history.push('/'))\r\n    .catch((error) => {\r\n      this.setState({ email: '', password: '', passwordConfirmation: '' })\r\n      msgAlert({\r\n        heading: 'Sign Up Failed with error: ' + error.message,\r\n        message: signUpFailure,\r\n        variant: 'danger'\r\n      })\r\n    })\r\n}\r\n\r\nrender () {\r\n  const { username, email, password, passwordConfirmation } = this.state\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Sign Up</h3>\r\n        <Form onSubmit={this.onSignUp}>\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type='username'\r\n              name='username'\r\n              value={username}\r\n              placeholder='Enter Username'\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type='email'\r\n              name='email'\r\n              value={email}\r\n              placeholder='Enter Email'\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name='password'\r\n              value={password}\r\n              type='password'\r\n              placeholder='Password'\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='passwordConfirmation'>\r\n            <Form.Label>Password Confirmation</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name='passwordConfirmation'\r\n              value={passwordConfirmation}\r\n              type='password'\r\n              placeholder='Confirm Password'\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Button variant='primary' type='submit'>\r\n\t\t\t\t\t\tSubmit\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\nexport default withRouter(SignUp)\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { signIn } from '../../api/auth'\r\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass SignIn extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      checked: false\r\n    }\r\n  }\r\n\r\nhandleChange = (event) =>\r\n  this.setState({\r\n    [event.target.name]: event.target.value\r\n  })\r\n\r\ntoggleChecked = () => {\r\n  this.setState(prevState => ({ checked: !prevState.checked }))\r\n}\r\n\r\nonSignIn = (event) => {\r\n  event.preventDefault()\r\n\r\n  const { msgAlert, history, setUser } = this.props\r\n  const { checked } = this.state\r\n\r\n  signIn(this.state)\r\n    .then((res) => {\r\n      setUser(res.data.user)\r\n      return res.data.user\r\n    })\r\n    .then(user => {\r\n      const userJSON = JSON.stringify(user)\r\n      if (window && checked) window.localStorage.setItem('user', userJSON)\r\n    })\r\n    .then(() =>\r\n      msgAlert({\r\n        heading: 'Sign In Success',\r\n        message: signInSuccess,\r\n        variant: 'success'\r\n      })\r\n    )\r\n    .then(() => history.push('/home'))\r\n    .catch((error) => {\r\n      this.setState({ email: '', password: '' })\r\n      msgAlert({\r\n        heading: 'Sign In Failed with error: ' + error.message,\r\n        message: signInFailure,\r\n        variant: 'danger'\r\n      })\r\n    })\r\n}\r\n\r\nrender () {\r\n  const { email, password, checked } = this.state\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Sign In</h3>\r\n        <Form onSubmit={this.onSignIn}>\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type='email'\r\n              name='email'\r\n              value={email}\r\n              placeholder='Enter email'\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name='password'\r\n              value={password}\r\n              type='password'\r\n              placeholder='Password'\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Button variant='primary' type='submit'>Submit</Button>\r\n          <Form.Check\r\n            type='checkbox'\r\n            id='default-checkbox'\r\n            label='Keep me logged in'\r\n            checked={checked}\r\n            onChange={this.toggleChecked}\r\n          />\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n}\r\n\r\nexport default withRouter(SignIn)\r\n","import { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { signOut } from '../../api/auth'\r\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\r\n\r\nclass SignOut extends Component {\r\n  componentDidMount () {\r\n    const { msgAlert, history, clearUser, user } = this.props\r\n\r\n    signOut(user)\r\n      .finally(() =>\r\n        msgAlert({\r\n          heading: 'Signed Out Successfully',\r\n          message: signOutSuccess,\r\n          variant: 'success'\r\n        })\r\n      )\r\n      .finally(() => {\r\n        if (window) window.localStorage.removeItem('user')\r\n      })\r\n      .finally(() => history.push('/sign-in'))\r\n      .finally(() => clearUser())\r\n  }\r\n\r\n  render () {\r\n    return ''\r\n  }\r\n}\r\n\r\nexport default withRouter(SignOut)\r\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass ChangePassword extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      oldPassword: '',\n      newPassword: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonChangePassword = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, user } = this.props\n\n  changePassword(this.state, user)\n    .then(() =>\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ oldPassword: '', newPassword: '' })\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { oldPassword, newPassword } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={this.onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(ChangePassword)\n","/* eslint-disable no-tabs */\r\nimport apiUrl from '../apiConfig'\r\nimport axios from 'axios'\r\n\r\nexport const createPost = (post, user) => {\r\n  return axios({\r\n    method: 'POST',\r\n    url: apiUrl + '/posts/',\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    },\r\n    data: {\r\n      post: {\r\n        owner: post.owner,\r\n        title: post.title,\r\n        content: post.content\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport const indexPosts = (user) => {\r\n  return axios({\r\n    method: 'GET',\r\n    url: apiUrl + '/posts/',\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const showPost = (user, postId) => {\r\n  return axios({\r\n    method: 'GET',\r\n    url: `${apiUrl}/posts/${postId}`,\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const indexUserPosts = (user, profileId) => {\r\n  return axios({\r\n    method: 'GET',\r\n    url: `${apiUrl}/posts${profileId}`,\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const deletePost = (user, postId) => {\r\n  return axios({\r\n    method: 'DELETE',\r\n    url: `${apiUrl}/posts/${postId}`,\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const updatePost = (post, user, postId) => {\r\n  return axios({\r\n    method: 'PATCH',\r\n    url: `${apiUrl}/posts/${postId}`,\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    },\r\n    data: {\r\n      post: {\r\n        title: post.title,\r\n        content: post.content\r\n      }\r\n    }\r\n  })\r\n}\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { createPost } from '../../../api/posts'\r\nimport { createPostSuccess, createPostFailure } from '../../AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport Editor from 'react-simple-code-editor'\r\nimport { highlight, languages } from 'prismjs/components/prism-core'\r\nimport 'prismjs/components/prism-clike'\r\nimport 'prismjs/components/prism-javascript'\r\nimport 'prismjs/components/prism-python'\r\nimport 'prismjs/components/prism-markup'\r\nimport 'prismjs/components/prism-css'\r\nimport 'prismjs/themes/prism-dark.css'\r\n\r\nimport './CreatePost.scss'\r\nimport '../PostContainer/PostContainer.scss'\r\n\r\nclass CreatePost extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      title: '',\r\n      content: '',\r\n      postId: null\r\n    }\r\n  }\r\n\r\n  handleChange = (event) =>\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n\r\n  onCreatePost = (event) => {\r\n    event.preventDefault()\r\n\r\n    const { msgAlert, history, user, updatePosts } = this.props\r\n\r\n    createPost(this.state, user)\r\n      .then(res => {\r\n        this.setState({ postId: res.data.post._id })\r\n        return res\r\n      })\r\n      .then(res => updatePosts({\r\n        owner: user,\r\n        title: this.state.title,\r\n        content: this.state.content,\r\n        comments: [],\r\n        _id: res.data.post._id\r\n      }))\r\n      .then(() => history.push('/home'))\r\n      .then(() => this.setState({ content: '' }))\r\n      .then(() => this.setState({ title: '' }))\r\n      .then(() => {\r\n        msgAlert({\r\n          heading: 'Post Created',\r\n          message: createPostSuccess,\r\n          variant: 'success'\r\n        })\r\n      })\r\n      .catch((err) => {\r\n        msgAlert({\r\n          heading: 'Couldn\\'t Create Post',\r\n          message: createPostFailure + err.message,\r\n          variant: 'danger'\r\n        })\r\n      })\r\n  }\r\n\r\n  render () {\r\n    const { title } = this.state\r\n\r\n    return (\r\n      <>\r\n        <h5 id=\"createPostHeader\">Create Post</h5>\r\n        <div className='postContainer'>\r\n          <Form onSubmit={this.onCreatePost}>\r\n            <Form.Group controlId='title'>\r\n              <Form.Control\r\n                required\r\n                autoComplete=\"off\"\r\n                className='titleInput'\r\n                name='title'\r\n                value={title}\r\n                placeholder='Post Title'\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId='content'>\r\n              <Editor className=\"border codeEditor\"\r\n                placeholder=\"// your code here\"\r\n                value={this.state.content}\r\n                onValueChange={content => this.setState({ content })}\r\n                highlight={content => highlight(content, languages.js)}\r\n                padding={10}\r\n              />\r\n            </Form.Group>\r\n            <Button id='createPostButton' variant='primary' type='submit'>Create</Button>\r\n          </Form>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(CreatePost)\r\n","import React, { Component } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\n// API request\r\nimport { updatePost, showPost } from '../../../api/posts'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport Editor from 'react-simple-code-editor'\r\nimport { highlight, languages } from 'prismjs/components/prism-core'\r\nimport 'prismjs/components/prism-clike'\r\nimport 'prismjs/components/prism-javascript'\r\n\r\nimport './EditPost.scss'\r\n\r\nclass UpdatePost extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      // using null as a starting value will help us manage the \"loading state\" of our UpdatePost component\r\n      title: '', // must provide starting values for the form inputs\r\n      content: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    // one of the automatic router props we get is the match object - that has data about the params in our front-end route url\r\n    const { match, user, msgAlert } = this.props\r\n\r\n    showPost(user, match.params.id)\r\n      .then(res => this.setState({ title: res.data.post.title, content: res.data.post.content }))\r\n      .then(() => msgAlert({\r\n        heading: 'Show post success',\r\n        message: 'Check out the post',\r\n        variant: 'success'\r\n      }))\r\n      .catch(err => msgAlert({\r\n        heading: 'Show post failed :(',\r\n        message: 'Something went wrong: ' + err.message,\r\n        variant: 'danger'\r\n      }))\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    // because `this.state.post` is an object with multiple keys, we have to do some fancy updating\r\n    const userInput = { [event.target.name]: event.target.value }\r\n    this.setState(currState => {\r\n      // \"Spread\" out current post state key/value pairs, then add the new one at the end\r\n      // this will override the old key/value pair in the state but leave the others untouched\r\n      return { post: { ...currState.post, ...userInput } }\r\n    })\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    const { user, msgAlert, history, match } = this.props\r\n\r\n    updatePost(this.state, user, match.params.id)\r\n      .then(res => history.push('/posts/' + match.params.id))\r\n      .then(() => msgAlert({ heading: 'Post Updated!', message: 'Nice work, go check out your post.', variant: 'success' }))\r\n      .catch(err => {\r\n        msgAlert({\r\n          heading: 'Post update failed :(',\r\n          message: 'Something went wrong: ' + err.message,\r\n          variant: 'danger'\r\n        })\r\n      })\r\n  }\r\n\r\n  render () {\r\n    const { title, content } = this.state\r\n    const { match } = this.props\r\n\r\n    return (\r\n      <>\r\n        <h5 id=\"updatePostHeader\">Edit Post</h5>\r\n        <div className='postContainer'>\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Form.Group controlId='title'>\r\n              <Form.Control\r\n                required\r\n                className='titleInput'\r\n                name='title'\r\n                value={title}\r\n                placeholder='Post Title'\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId='content'>\r\n              <Editor className=\"border codeEditor\"\r\n                value={content}\r\n                onValueChange={content => this.setState({ content })}\r\n                highlight={content => highlight(content, languages.js)}\r\n                padding={10}\r\n              />\r\n            </Form.Group>\r\n            <Button id='updatePostButton' variant='primary' type='submit'>Update</Button>\r\n          </Form>\r\n        </div>\r\n        <Link to={`/posts/${match.params.id}`}>\r\n          <Button size='sm' className='btn'>Go back</Button>\r\n        </Link>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(UpdatePost)\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { createComment } from '../../../api/comments'\r\nimport { createCommentFailure } from '../../AutoDismissAlert/messages'\r\nimport uniqid from 'uniqid'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nimport './CreateComment.scss'\r\n\r\nclass CreateComment extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      ownerName: props.user.username,\r\n      content: '',\r\n      created: false\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.setState({ _id: uniqid() })\r\n  }\r\n\r\n  handleChange = (event) =>\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n\r\n  onCreateComment = (event) => {\r\n    event.preventDefault()\r\n\r\n    const { msgAlert, user, postId, updateComments, showComments, toggleComments } = this.props\r\n    const { content, _id } = this.state\r\n\r\n    createComment(this.state, user, postId)\r\n      .then(() =>\r\n        updateComments({\r\n          ownerName: user.username,\r\n          owner: user._id,\r\n          content,\r\n          _id\r\n        })\r\n      )\r\n      .then(() => { if (!showComments) toggleComments() })\r\n      .then(() => { this.setState({ content: '' }) })\r\n      .catch((err) => {\r\n        msgAlert({\r\n          heading: 'Couldn\\'t Create Comment',\r\n          message: createCommentFailure + err.message,\r\n          variant: 'danger'\r\n        })\r\n      })\r\n      .finally(() => {\r\n        this.setState({ _id: uniqid() })\r\n      })\r\n  }\r\n\r\n  render () {\r\n    const { content } = this.state\r\n\r\n    return (\r\n      <>\r\n        <Form onSubmit={this.onCreateComment}>\r\n          <Form.Group>\r\n            <Form.Control\r\n              required\r\n              autoComplete=\"off\"\r\n              className=\"commentInput\"\r\n              name='content'\r\n              value={content}\r\n              placeholder='Add Comment'\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n        </Form>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(CreateComment)\r\n","/* eslint-disable no-tabs */\r\nimport apiUrl from '../apiConfig'\r\nimport axios from 'axios'\r\n\r\nexport const createComment = (comment, user, postId) => {\r\n  return axios({\r\n    method: 'POST',\r\n    url: apiUrl + `/posts/${postId}/comments/`,\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    },\r\n    data: {\r\n      comment: {\r\n        ownerName: comment.ownerName,\r\n        owner: comment.owner,\r\n        content: comment.content,\r\n        _id: comment._id\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport const updateComment = (comment, user, postId) => {\r\n  return axios({\r\n    method: 'PATCH',\r\n    url: apiUrl + `/posts/${postId}/comments/`,\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    },\r\n    data: {\r\n      comment: {\r\n        ownerName: comment.ownerName,\r\n        owner: comment.owner,\r\n        content: comment.content,\r\n        _id: comment._id\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport const deleteComment = (user, postId, commentId) => {\r\n  return axios({\r\n    method: 'DELETE',\r\n    url: apiUrl + `/posts/${postId}/comments/`,\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    },\r\n    data: {\r\n      commentId: commentId,\r\n      userId: user._id\r\n    }\r\n  })\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Redirect, withRouter } from 'react-router-dom'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport { updateComment } from '../../api/comments'\r\n\r\nclass EditComment extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      deleted: false,\r\n      content: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    const { comment } = this.props\r\n    this.setState({ content: comment.content })\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  onEditComment = (event) => {\r\n    event.preventDefault()\r\n    const { comment, user, postId, updateComments, toggle } = this.props\r\n    const { content } = this.state\r\n    const newComment = { ...comment }\r\n    newComment.content = content\r\n    updateComment(newComment, user, postId)\r\n    updateComments(newComment)\r\n    toggle('showEdit')\r\n  }\r\n\r\n  render () {\r\n    const { deleted, content } = this.state\r\n    if (deleted) {\r\n      return <Redirect to={\r\n        { pathname: '/home' }\r\n      } />\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Form onSubmit={this.onEditComment}>\r\n          <Form.Group controlId='content'>\r\n            <Form.Control\r\n              required\r\n              name='content'\r\n              value={content}\r\n              placeholder='Comment'\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Button variant='primary' type='submit'>Update</Button>\r\n        </Form>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(EditComment)\r\n","import React, { Component, Fragment } from 'react'\r\n\r\nimport { Link, Redirect, withRouter } from 'react-router-dom'\r\n\r\nimport EditComment from '../EditComment'\r\nimport { deleteComment } from '../../../api/comments'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport './Comment.scss'\r\n\r\nclass Comment extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      comment: null,\r\n      showEdit: false,\r\n      showButtons: false,\r\n      deleted: false\r\n    }\r\n  }\r\n\r\n  toggle = (property) => {\r\n    this.setState((prevState) => ({ [property]: !prevState[property] }))\r\n  }\r\n\r\n  onDestroyComment = (event) => {\r\n    event.preventDefault()\r\n    const { comment, user, postId, updateComments } = this.props\r\n    deleteComment(user, postId, comment._id)\r\n    updateComments(comment._id)\r\n  }\r\n\r\n  //\r\n\r\n  render () {\r\n    const { deleted, showEdit, showButtons } = this.state\r\n    const { comment, user, msgAlert, postId, updateComments } = this.props\r\n    const renderButtons = (comment.owner === user._id && showButtons && !showEdit)\r\n\r\n    const modifyButtonsJsx = (\r\n      <>\r\n        <Button\r\n          size='sm'\r\n          variant='secondary'\r\n          className=\"commentButton\"\r\n          onClick={() => this.toggle('showEdit')}>\r\n          Edit\r\n        </Button>\r\n        <Button\r\n          size='sm'\r\n          variant='danger'\r\n          className=\"commentButton\"\r\n          onClick={this.onDestroyComment}>\r\n          Delete\r\n        </Button>\r\n      </>\r\n    )\r\n\r\n    const editCommentJsx = (\r\n      <>\r\n        <EditComment\r\n          toggle={this.toggle}\r\n          updateComments={updateComments}\r\n          msgAlert={msgAlert}\r\n          comment={comment}\r\n          postId={postId}\r\n          user={user}\r\n        />\r\n        <Button size='sm' variant='danger' onClick={() => this.toggle('showEdit')}>Cancel</Button>\r\n      </>\r\n    )\r\n\r\n    if (deleted) {\r\n      return <Redirect to={\r\n        { pathname: '/home' }\r\n      } />\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div onClick={() => this.toggle('showButtons')}>\r\n          <div className=\"comment\">\r\n            <Link\r\n              to={`/posts?user=${comment.owner}`}\r\n              className=\"commentOwner\">{comment.ownerName}\r\n            </Link>\r\n            {showEdit ? editCommentJsx : comment.content}\r\n            {renderButtons ? modifyButtonsJsx : ''}\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Comment)\r\n","import React, { Component } from 'react'\r\nimport Comment from './Comment/Comment'\r\n\r\nclass Comments extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      comments: [],\r\n      loading: false\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const { comments, msgAlert, user, postId, postOwner, updateComments } = this.props\r\n    return (\r\n      <div>\r\n        {comments.map((comment) => (\r\n          <div key={comment._id}>\r\n            <Comment\r\n              updateComments={updateComments}\r\n              postOwner={postOwner}\r\n              msgAlert={msgAlert}\r\n              comment={comment}\r\n              postId={postId}\r\n              user={user}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Comments\r\n","import React, { Component } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\nimport CreateComment from '../../comments/CreateComment/CreateComment'\r\nimport Comments from '../../comments/Comments'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport './PostContainer.scss'\r\n\r\nclass PostContainer extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      comments: [],\r\n      showComments: false\r\n    }\r\n  }\r\n\r\n  goToPost = (e) => {\r\n    if (!e.target.classList.contains('post')) return\r\n    const { post, history } = this.props\r\n    history.push(`/posts/${post._id}`)\r\n  }\r\n\r\n  updateComments = (comment) => {\r\n    const { comments } = this.state\r\n    const newComments = [...comments]\r\n    if (typeof comment === 'string') {\r\n      const index = comments.findIndex(el => el._id === comment)\r\n      newComments.splice(index, 1)\r\n      this.setState({ comments: newComments })\r\n    } else {\r\n      const index = comments.findIndex(el => el._id === comment._id)\r\n      if (index >= 0) {\r\n        newComments.splice(index, 1, comment)\r\n\r\n        this.setState({ comments: newComments })\r\n      } else {\r\n        this.setState(prevState => {\r\n          return { comments: [...prevState.comments, comment] }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  // new function to delete a comment\r\n\r\n  componentDidMount () {\r\n    const { post } = this.props\r\n    this.setState({ comments: post.comments })\r\n  }\r\n\r\n  toggleComments = () => {\r\n    this.setState(prevState => {\r\n      return { showComments: !prevState.showComments }\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { msgAlert, user, post } = this.props\r\n    const { showComments, comments } = this.state\r\n    const s = comments.length === 1 ? '' : 's'\r\n    const commentsJsx = (\r\n      <>\r\n        <Comments\r\n          updateComments={this.updateComments}\r\n          msgAlert={msgAlert}\r\n          user={user}\r\n          comments={comments}\r\n          postId={post._id}\r\n        />\r\n        <CreateComment\r\n          updateComments={this.updateComments}\r\n          toggleComments={this.toggleComments}\r\n          showComments={showComments}\r\n          msgAlert={msgAlert}\r\n          user={user}\r\n          postId={post._id}\r\n          postOwner={post.owner._id}\r\n        />\r\n      </>\r\n    )\r\n    return (\r\n      <div className=\"post postContainer\" onClick={e => this.goToPost(e)}>\r\n        <p className=\"post postTitle\">\r\n          <Link\r\n            to={`/posts?user=${post.owner._id}`}\r\n            className=\"postOwner\">{post.owner.username}\r\n          </Link>\r\n          {post.title}\r\n        </p>\r\n        <div className=\"post postContent\">\r\n          {post.content.split('\\n').map((line, index) => {\r\n            return (\r\n              <p className=\"code\" key={index}>\r\n                {line.replace(' ', '\\u00A0')}\r\n              </p>\r\n            )\r\n          })}\r\n        </div>\r\n        <Button className=\"showComments\" size='sm' variant='outline-primary' onClick={this.toggleComments}>\r\n          {showComments ? 'Hide Comments' : `${comments.length} Comment${s}`}\r\n        </Button>\r\n        {showComments ? commentsJsx : ''}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(PostContainer)\r\n","import React, { Component } from 'react'\r\n\r\nimport { indexPosts } from '../../api/posts'\r\nimport { indexPostsFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport PostContainer from '../posts/PostContainer/PostContainer'\r\nimport CreatePost from '../posts/CreatePost/CreatePost'\r\n\r\nclass Home extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      posts: [],\r\n      loading: false\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    const { user, msgAlert } = this.props\r\n\r\n    indexPosts(user)\r\n      .then(res => this.setState({\r\n        posts: res.data.posts.reverse()\r\n      }))\r\n      .catch(err => {\r\n        msgAlert({\r\n          heading: 'Couldn\\'t Create Post',\r\n          message: indexPostsFailure + err.message,\r\n          variant: 'danger'\r\n        })\r\n      })\r\n  }\r\n\r\n  updatePosts = (post) => {\r\n    this.setState(prevState => {\r\n      return { posts: [post, ...prevState.posts] }\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { posts } = this.state\r\n    const { user, msgAlert } = this.props\r\n    return (\r\n      <div>\r\n        <CreatePost updatePosts={this.updatePosts} msgAlert={msgAlert} user={user} />\r\n        {posts.map(post => (\r\n          <div key={post._id}>\r\n            <PostContainer\r\n              msgAlert={msgAlert}\r\n              user={user}\r\n              post={post}\r\n              comments={post.comments}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from 'react'\r\nimport { Link, Redirect, withRouter } from 'react-router-dom'\r\n\r\nimport { deletePost, showPost } from '../../api/posts'\r\nimport { showPostFailure, deletePostSuccess, deletePostFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport PostContainer from './PostContainer/PostContainer'\r\n\r\nclass Post extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      post: null,\r\n      deleted: false\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    const { user, match, msgAlert } = this.props\r\n\r\n    showPost(user, match.params.id)\r\n      .then(res => this.setState({ post: res.data.post }))\r\n      .catch(err => {\r\n        msgAlert({\r\n          heading: 'Couldn\\'t Create Post',\r\n          message: showPostFailure + err.message,\r\n          variant: 'danger'\r\n        })\r\n      })\r\n  }\r\n\r\n  destroy = () => {\r\n    const { user, match, msgAlert } = this.props\r\n    deletePost(user, match.params.id)\r\n      .then(() => {\r\n        msgAlert({\r\n          heading: 'Post Deleted',\r\n          message: deletePostSuccess,\r\n          variant: 'success'\r\n        })\r\n      })\r\n      .then(() => this.setState({ deleted: true }))\r\n      .catch(err => {\r\n        msgAlert({\r\n          heading: 'Couldn\\'t Delete Post',\r\n          message: deletePostFailure + err.message,\r\n          variant: 'danger'\r\n        })\r\n      })\r\n  }\r\n\r\n  render () {\r\n    const { post, deleted } = this.state\r\n    const { user, msgAlert } = this.props\r\n\r\n    const modifyButtonsJsx = (\r\n      <>\r\n        <Link to={`/posts/${this.props.match.params.id}/edit`}>\r\n          <Button size='sm' variant='primary'>Edit</Button>\r\n        </Link>\r\n        <Button size='sm' variant='danger' onClick={this.destroy}>Delete post</Button>\r\n      </>\r\n    )\r\n\r\n    if (!post) {\r\n      return (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n      )\r\n    }\r\n\r\n    if (deleted) {\r\n      return <Redirect to={\r\n        { pathname: '/home' }\r\n      } />\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <PostContainer\r\n          msgAlert={msgAlert}\r\n          user={user}\r\n          post={post}\r\n          comments={post.comments}\r\n        />\r\n        <Link to=\"/home\">\r\n          <Button size='sm' className='btn'>Go back</Button>\r\n        </Link>\r\n        {post.owner._id === user._id ? modifyButtonsJsx : ''}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Post)\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { indexUserPosts } from '../../api/posts'\r\nimport { indexPostsFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport PostContainer from '../posts/PostContainer/PostContainer'\r\nimport CreatePost from '../posts/CreatePost/CreatePost'\r\n\r\nclass Profile extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      posts: [],\r\n      loading: false\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    const { user, location, msgAlert } = this.props\r\n\r\n    indexUserPosts(user, location.search)\r\n      .then(res => this.setState({\r\n        posts: res.data.posts.reverse()\r\n      }))\r\n      .catch(err => {\r\n        msgAlert({\r\n          heading: 'Couldn\\'t Create Post',\r\n          message: indexPostsFailure + err.message,\r\n          variant: 'danger'\r\n        })\r\n      })\r\n  }\r\n\r\n  updatePosts = (post) => {\r\n    this.setState(prevState => {\r\n      return { posts: [post, ...prevState.posts] }\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { posts } = this.state\r\n    const { user, msgAlert } = this.props\r\n    return (\r\n      <div>\r\n        <CreatePost updatePosts={this.updatePosts} msgAlert={msgAlert} user={user} />\r\n        {posts.map(post => (\r\n          <div key={post._id}>\r\n            <PostContainer\r\n              msgAlert={msgAlert}\r\n              user={user}\r\n              post={post}\r\n              comments={post.comments}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Profile)\r\n","/* eslint-disable no-mixed-spaces-and-tabs */\r\n/* eslint-disable no-tabs */\r\n// Import React, also destructuring Component and Fragment from React\r\n// React is required for JSX\r\nimport React, { Component } from 'react'\r\n// Destructuring Route component from react-router-dom\r\nimport { Route, withRouter } from 'react-router-dom'\r\n// import v4 and rename it uuid\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nimport AuthenticatedRoute from './components/AuthenticatedRoute/AuthenticatedRoute'\r\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\r\nimport Header from './components/Header/Header'\r\nimport SignUp from './components/auth/SignUp'\r\nimport SignIn from './components/auth/SignIn'\r\nimport SignOut from './components/auth/SignOut'\r\nimport ChangePassword from './components/auth/ChangePassword'\r\nimport CreatePost from './components/posts/CreatePost/CreatePost'\r\nimport EditPost from './components/posts/EditPost/EditPost'\r\nimport Home from './components/Home/Home'\r\nimport Post from './components/posts/Post'\r\nimport Profile from './components/Profile/Profile'\r\n\r\nclass App extends Component {\r\n  // Constructor initializes component\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      user: null,\r\n      msgAlerts: []\r\n    }\r\n  }\r\n\r\n\t// Accepts a user and sets that user in state\r\n\tsetUser = (user) => this.setState({ user })\r\n\r\n\t// Clears current user and sets user in state to null\r\n\tclearUser = () => this.setState({ user: null })\r\n\r\n\t// Removes a specific alert from the msgAlerts array in state\r\n\tdeleteAlert = (id) => {\r\n\t  this.setState((state) => {\r\n\t    // .filter() does not modify original array\r\n\t    return { msgAlerts: state.msgAlerts.filter((msg) => msg.id !== id) }\r\n\t  })\r\n\t}\r\n\r\n\t// Accepts one alert object with three keys\r\n\tmsgAlert = ({ heading, message, variant }) => {\r\n\t  // Generate a universally unique id for this alert\r\n\t  const id = uuid()\r\n\t  // Set state by passing setState a callback\r\n\t  // 'state' param is previous state\r\n\t  this.setState((state) => {\r\n\t    return {\r\n\t      // spread existing msgAlerts array and add the new alert to it.\r\n\t      msgAlerts: [...state.msgAlerts, { heading, message, variant, id }]\r\n\t    }\r\n\t  })\r\n\t}\r\n\r\n\tcomponentDidMount () {\r\n\t  const { history } = this.props\r\n\t  const user = JSON.parse(window.localStorage.getItem('user'))\r\n\t  if (window) {\r\n\t    this.setUser(user)\r\n\t    history.push('/home')\r\n\t  }\r\n\t}\r\n\r\n\trender () {\r\n\t  const { msgAlerts, user } = this.state\r\n\r\n\t  return (\r\n\t    <>\r\n\t      {/* Passing user to header allows for tabs unique to the user */}\r\n\t      <Header user={user} />\r\n\t      {/* This .map will return a new array filled with JSX of our msgAlerts */}\r\n\t      {msgAlerts.map((msgAlert) => (\r\n\t        <AutoDismissAlert\r\n\t          key={msgAlert.id}\r\n\t          heading={msgAlert.heading}\r\n\t          variant={msgAlert.variant}\r\n\t          message={msgAlert.message}\r\n\t          id={msgAlert.id}\r\n\t          deleteAlert={this.deleteAlert}\r\n\t        />\r\n\t      ))}\r\n\t      <main className='container col-sm-12 col-lg-6'>\r\n\t        {/* Pass in 'msgAlert' and 'setUser' methods as props */}\r\n\t        <Route\r\n\t          path='/sign-up'\r\n\t          render={() => (\r\n\t            <SignUp msgAlert={this.msgAlert} setUser={this.setUser} />\r\n\t          )}\r\n\t        />\r\n\t        <Route\r\n\t          path='/sign-in'\r\n\t          render={() => (\r\n\t            <SignIn msgAlert={this.msgAlert} setUser={this.setUser} />\r\n\t          )}\r\n\t        />\r\n\t        <AuthenticatedRoute\r\n\t          user={user}\r\n\t          path='/sign-out'\r\n\t          render={() => (\r\n\t            <SignOut\r\n\t              msgAlert={this.msgAlert}\r\n\t              clearUser={this.clearUser}\r\n\t              user={user}\r\n\t            />\r\n\t          )}\r\n\t        />\r\n\t        <AuthenticatedRoute\r\n\t          user={user}\r\n\t          path='/change-password'\r\n\t          render={() => (\r\n\t            <ChangePassword msgAlert={this.msgAlert} user={user} />\r\n\t          )}\r\n\t        />\r\n\t        <AuthenticatedRoute\r\n\t          user={user}\r\n\t          path='/create-post'\r\n\t          render={() => <CreatePost msgAlert={this.msgAlert} user={user} />}\r\n\t        />\r\n\t        <AuthenticatedRoute\r\n\t          user={user}\r\n\t\t\t\t\t  exact\r\n\t          path='/posts/:id/edit'\r\n\t          render={() => <EditPost msgAlert={this.msgAlert} user={user} />}\r\n\t        />\r\n\t        <AuthenticatedRoute\r\n\t          user={user}\r\n\t          exact\r\n\t          path='/home'\r\n\t          render={() => <Home msgAlert={this.msgAlert} user={user} />}\r\n\t        />\r\n\t        <AuthenticatedRoute\r\n\t          user={user}\r\n\t          exact\r\n\t          path='/posts/:id'\r\n\t          render={() => <Post msgAlert={this.msgAlert} user={user} />}\r\n\t        />\r\n\t        <AuthenticatedRoute\r\n\t          user={user}\r\n\t          exact\r\n\t          path='/posts'\r\n\t          render={() => <Profile msgAlert={this.msgAlert} user={user} />}\r\n\t        />\r\n\t      </main>\r\n\t    </>\r\n\t  )\r\n\t}\r\n}\r\n\r\nexport default withRouter(App)\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}